Sploit4 exploits a vulnerability in Tinyserv's caching mechanism, allowing attackers to access sensitive files like admin.txt without authentication. It does this by simulating a legitimate user to log in and open the admin logs. The root issue is that it didn't differentiate between regular files and sensitive files when caching. Once an administrator accesses admin.txt, the server stores its content in the cache. Attackers can then directly request the same URL to retrieve the cached admin.txt content, bypassing authentication checks entirely. 

To fix this, we added the sensitive_file() function add a check before update_cache(). This function verifies if the requested file path contains admin.txt. If detected, the server skips caching that file. This modification ensures Tinyserv only caches non-sensitive files, blocking unauthorized access to confidential data through cached content. 